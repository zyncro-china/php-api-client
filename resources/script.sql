#DROP TABLES
DROP TABLE IF EXISTS ZYNCRO_API_TOKEN;

# AUTHORIZATION SETTINGS
CREATE TABLE ZYNCRO_API_TOKEN (
	ID	bigint(20) not null auto_increment,
	ORGANIZATION varchar(800) DEFAULT NULL COMMENT 'ZYNCRO ORGANIZATION',
    EMAIL varchar(800) DEFAULT NULL COMMENT 'ZYNCRO USER EMAIL',
	TOKEN varchar(800) binary COMMENT 'ZYNCRO ACCESS TOKEN',
	TOKEN_SECRET varchar(800) binary COMMENT 'ZYNCRO TOKEN SECRET',

	primary key (ID)
) engine=InnoDB default charset=utf8;

DELIMITER $$

DROP PROCEDURE IF EXISTS `SP_ZAPI_GET_TOKEN`$$

CREATE

	PROCEDURE `SP_ZAPI_GET_TOKEN`(pORGANIZATION VARCHAR(800), pUSER VARCHAR(800))

	BEGIN
		DECLARE EXIST INT;
		
		SELECT COUNT(*) INTO EXIST
		FROM ZYNCRO_API_TOKEN
		WHERE ORGANIZATION = pORGANIZATION
			AND EMAIL = pUSER;

		IF (EXIST > 0) THEN
			SELECT TOKEN, TOKEN_SECRET
			FROM ZYNCRO_API_TOKEN
			WHERE ORGANIZATION = pORGANIZATION
				AND EMAIL = pUSER;
		ELSE
			SELECT '' AS TOKEN, '' AS TOKEN_SECRET;
		END IF;

	END$$

DROP PROCEDURE IF EXISTS `SP_ZAPI_SAVE_TOKEN`$$

CREATE

	PROCEDURE `SP_ZAPI_SAVE_TOKEN`(pORGANIZATION VARCHAR(800), pUSER VARCHAR(800), pTOKEN VARCHAR(800) BINARY, pTOKEN_SECRET VARCHAR(800) BINARY)

	BEGIN
		DECLARE EXIST INT;
		
		SELECT COUNT(*) INTO EXIST
		FROM ZYNCRO_API_TOKEN
		WHERE ORGANIZATION = pORGANIZATION
			AND EMAIL = pUSER;

		IF (EXIST > 0) THEN
			UPDATE ZYNCRO_API_TOKEN SET TOKEN = pTOKEN, TOKEN_SECRET = pTOKEN_SECRET
			WHERE ORGANIZATION = pORGANIZATION
				AND EMAIL = pUSER;
		ELSE
			INSERT INTO ZYNCRO_API_TOKEN (ORGANIZATION, EMAIL, TOKEN, TOKEN_SECRET)
				VALUES (pORGANIZATION, pUSER, pTOKEN, pTOKEN_SECRET);
			
		END IF;

	END$$
